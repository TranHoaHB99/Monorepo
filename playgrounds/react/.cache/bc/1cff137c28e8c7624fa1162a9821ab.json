{"id":"../../../node_modules/@ds.e/react/lib/molecules/Select/Select.js","dependencies":[{"name":"D:\\DS-Atomic\\node_modules\\@ds.e\\react\\lib\\molecules\\Select\\Select.js.map","includedInParent":true,"mtime":1687162113305},{"name":"D:\\DS-Atomic\\playgrounds\\react\\package.json","includedInParent":true,"mtime":1687093625522},{"name":"D:\\DS-Atomic\\node_modules\\@ds.e\\react\\package.json","includedInParent":true,"mtime":1687162098941},{"name":"react","loc":{"line":1,"column":32,"index":32},"parent":"D:\\DS-Atomic\\node_modules\\@ds.e\\react\\lib\\molecules\\Select\\Select.js","resolved":"D:\\DS-Atomic\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nconst Select = ({\n  options = [],\n  label = \"Please select an option\",\n  onOptionSelected: handler\n}) => {\n  const [isOpen, setIsOpen] = (0, _react.useState)(false);\n  const onOptionSelected = (option, index) => {\n    if (handler) handler(option, index);\n  };\n  const onLabelClick = () => {\n    setIsOpen(!isOpen);\n  };\n  return _react.default.createElement(\"div\", null, _react.default.createElement(\"button\", {\n    onClick: () => onLabelClick()\n  }, label), isOpen ? _react.default.createElement(\"ul\", null, options.map((option, index) => _react.default.createElement(\"li\", {\n    key: option.value,\n    onClick: () => onOptionSelected(option, index)\n  }, option.label))) : null);\n};\nexports.default = Select;"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"5e9bd780dc662008b98a7cff6b55a0f3","cacheData":{"env":{}}}